{"ast":null,"code":"var _jsxFileName = \"/home/trollhero/MEGAsync/reactweather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"dc6ff6a86398fe175602b6f3e0ff0091\",\n  baseURL: \"https://api.openweathermap.org/data/2.5\"\n};\n\nfunction App() {\n  _s();\n\n  //Declare and init state to empty str, empty obj\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({}); //Define the search function, takes event object\n\n  const search = evt => {\n    //If enter key is pressed\n    if (evt.key === \"Enter\") {\n      //Call the api, pass in query state\n      // fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      fetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`) //Then get the json promise\n      .then(res => res.json()) //Then set weather and query state\n      .then(result => {\n        setWeather(result); //Reset to empty string upon completion to choose new target location\n\n        setQuery(\"\");\n        console.log(result);\n      });\n    }\n  }; //Datebuilder function\n\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Enter something here...\" //On change event, call setquery pass in event target\n          ,\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location\",\n          children: \"LOCATION USA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: dateBuilder(new Date())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temp\",\n          children: \" 75 Degrees F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather\",\n          children: \" Lovely\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"GVng0aXCH4yLtaeOWbs04pRRVUQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/trollhero/MEGAsync/reactweather/src/App.js"],"names":["React","useState","api","key","baseURL","App","query","setQuery","weather","setWeather","search","evt","fetch","base","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","e","target","value","Date"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst api = {\n    key: \"dc6ff6a86398fe175602b6f3e0ff0091\",\n    baseURL: \"https://api.openweathermap.org/data/2.5\"\n}\n\nfunction App() {\n    //Declare and init state to empty str, empty obj\n    const [query, setQuery] = useState(\"\");\n    const [weather, setWeather] = useState({});\n\n    //Define the search function, takes event object\n    const search = (evt) => {\n        //If enter key is pressed\n        if (evt.key === \"Enter\") {\n            //Call the api, pass in query state\n            // fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n            fetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`)\n                //Then get the json promise\n                .then(res => res.json())\n                //Then set weather and query state\n                .then(result => {\n                    setWeather(result);\n                    //Reset to empty string upon completion to choose new target location\n                    setQuery(\"\");\n                    console.log(result);\n                });\n        }\n    }\n    //Datebuilder function\n    const dateBuilder = (d) => {\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\",\n            \"September\", \"October\", \"November\", \"December\"];\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n        let day = days[d.getDay()];\n        let date = d.getDate();\n        let month = months[d.getMonth()];\n        let year = d.getFullYear();\n\n        return `${day} ${date} ${month} ${year}`\n    }\n      return (\n        <div className=\"App\">\n            <main>\n                <div className = \"search-box\">\n                    <input\n                        type = \"text\"\n                        className= \"search-bar\"\n                        placeholder=\"Enter something here...\"\n                        //On change event, call setquery pass in event target\n                        onChange={e => setQuery(e.target.value)}\n                        value={query}\n                        onKeyPress={search}\n                    />\n                </div>\n                <div className= \"location-box\">\n                    <div className= \"location\">LOCATION USA</div>\n                    {/*Call the datebuilder function */}\n                    <div className= \"date\">{dateBuilder(new Date())}</div>\n                </div>\n                <div className=\"weather-box\">\n                    <div className=\"temp\"> 75 Degrees F\n                        {/*{Math.round(weather.main.temp)}Â°c*/}\n                    </div>\n                    <div className=\"weather\"> Lovely\n                    </div>\n                </div>\n            </main>\n        </div>\n      );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}