{"ast":null,"code":"var _jsxFileName = \"/home/trollhero/MEGAsync/reactweather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"dc6ff6a86398fe175602b6f3e0ff0091\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  //Declare and init state to empty str, empty obj\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({}); //Define the search function, takes event object\n\n  const search = evt => {\n    //If enter key is pressed\n    if (evt.key === \"Enter\") {\n      //Call the api, pass in query state\n      //fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      fetch(`${api.base}weather?q=${query}&appid=${api.key}`) //Then get the json promise\n      .then(res => res.json()) //Then set weather and query state\n      .then(result => {\n        setWeather(result); //Reset to empty string upon completion to choose new target location\n\n        setQuery(\"\");\n        console.log(result);\n      });\n    }\n  }; // const search = evt => {\n  //     if (evt.key === \"Enter\") {\n  //         fetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`)\n  //             .then(res => res.json())\n  //             .then(result => {\n  //                 setWeather(result);\n  //                 setQuery('');\n  //                 console.log(result);\n  //             });\n  //     }\n  // }\n  //Datebuilder function\n\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Enter something here...\" //On change event, call setquery pass in event target\n          ,\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [weather.name, \", \", weather.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), \"\\xB0f\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weather.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"GVng0aXCH4yLtaeOWbs04pRRVUQ=\");\n\n_c = App;\nexport default App; //     return (\n//         <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app'}>\n//             <main>\n//                 <div className=\"search-box\">\n//                     <input\n//                         type=\"text\"\n//                         className=\"search-bar\"\n//                         placeholder=\"Search...\"\n//                         onChange={e => setQuery(e.target.value)}\n//                         value={query}\n//                         onKeyPress={search}\n//                     />\n//                 </div>\n//                 {(typeof weather.main != \"undefined\") ? (\n//                     <div>\n//                         <div className=\"location-box\">\n//                             <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n//                             <div className=\"date\">{dateBuilder(new Date())}</div>\n//                         </div>\n//                         <div className=\"weather-box\">\n//                             <div className=\"temp\">\n//                                 {Math.round(weather.main.temp)}Â°c\n//                             </div>\n//                             <div className=\"weather\">{weather.weather[0].main}</div>\n//                         </div>\n//                     </div>\n//                 ) : ('')}\n//             </main>\n//         </div>\n//     );\n// }\n//\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/trollhero/MEGAsync/reactweather/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","e","target","value","main","name","sys","country","Date","Math","round","temp"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nconst api = {\n    key: \"dc6ff6a86398fe175602b6f3e0ff0091\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n    //Declare and init state to empty str, empty obj\n    const [query, setQuery] = useState(\"\");\n    const [weather, setWeather] = useState({});\n\n    //Define the search function, takes event object\n    const search = (evt) => {\n        //If enter key is pressed\n        if (evt.key === \"Enter\") {\n            //Call the api, pass in query state\n            //fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n            fetch(`${api.base}weather?q=${query}&appid=${api.key}`)\n                //Then get the json promise\n                .then(res => res.json())\n                //Then set weather and query state\n                .then(result => {\n                    setWeather(result);\n                    //Reset to empty string upon completion to choose new target location\n                    setQuery(\"\");\n                    console.log(result);\n                });\n        }\n    }\n    // const search = evt => {\n    //     if (evt.key === \"Enter\") {\n    //         fetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`)\n    //             .then(res => res.json())\n    //             .then(result => {\n    //                 setWeather(result);\n    //                 setQuery('');\n    //                 console.log(result);\n    //             });\n    //     }\n    // }\n\n\n    //Datebuilder function\n    const dateBuilder = (d) => {\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\",\n            \"September\", \"October\", \"November\", \"December\"];\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n        let day = days[d.getDay()];\n        let date = d.getDate();\n        let month = months[d.getMonth()];\n        let year = d.getFullYear();\n\n        return `${day} ${date} ${month} ${year}`\n    }\n\n\n    return (\n        <div className=\"App\">\n            <main>\n                <div className = \"search-box\">\n                    <input\n                        type = \"text\"\n                        className= \"search-bar\"\n                        placeholder=\"Enter something here...\"\n                        //On change event, call setquery pass in event target\n                        onChange={e => setQuery(e.target.value)}\n                        value={query}\n                        onKeyPress={search}\n                    />\n                </div>\n                {(typeof weather.main != \"undefined\") ? (\n                    <div>\n                        <div className=\"location-box\">\n                            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n                            <div className=\"date\">{dateBuilder(new Date())}</div>\n                        </div>\n                        <div className=\"weather-box\">\n                            <div className=\"temp\">\n                                {Math.round(weather.main.temp)}Â°f\n                            </div>\n                            <div className=\"weather\">{weather.weather[0].main}</div>\n                        </div>\n                    </div>\n                ) : ('')}\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n\n\n\n\n\n//     return (\n//         <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app'}>\n//             <main>\n//                 <div className=\"search-box\">\n//                     <input\n//                         type=\"text\"\n//                         className=\"search-bar\"\n//                         placeholder=\"Search...\"\n//                         onChange={e => setQuery(e.target.value)}\n//                         value={query}\n//                         onKeyPress={search}\n//                     />\n//                 </div>\n//                 {(typeof weather.main != \"undefined\") ? (\n//                     <div>\n//                         <div className=\"location-box\">\n//                             <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n//                             <div className=\"date\">{dateBuilder(new Date())}</div>\n//                         </div>\n//                         <div className=\"weather-box\">\n//                             <div className=\"temp\">\n//                                 {Math.round(weather.main.temp)}Â°c\n//                             </div>\n//                             <div className=\"weather\">{weather.weather[0].main}</div>\n//                         </div>\n//                     </div>\n//                 ) : ('')}\n//             </main>\n//         </div>\n//     );\n// }\n//\n// export default App;"]},"metadata":{},"sourceType":"module"}