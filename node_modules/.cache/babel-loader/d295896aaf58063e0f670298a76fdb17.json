{"ast":null,"code":"var _jsxFileName = \"/home/trollhero/MEGAsync/Lambda/react-wx-vercel/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"dc6ff6a86398fe175602b6f3e0ff0091\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  //Declare and init state to empty str, empty obj\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({}); //Define the search function, takes event object\n\n  const search = evt => {\n    //If enter key is pressed\n    if (evt.key === \"Enter\") {\n      //Call the api, pass in query state\n      fetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`) //fetch(`${api.base}weather?q=${query}&appid=${api.key}`)\n      //Then get the json promise\n      .then(res => res.json()) //Then set weather and query state\n      .then(result => {\n        setWeather(result); //Reset to empty string upon completion to choose new target location\n\n        setQuery(\"\");\n        console.log(result);\n      });\n    }\n  }; //Datebuilder function\n\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: //If no search, call class app\n    typeof weather.main != \"undefined\" ? //If temp highe than 85\n    weather.main.temp > 85 ? //Call class warm\n    \"App warm\" : // Else, call app\n    \"App\" : \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"React Weather App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"openweater.org\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"tombielawski.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"October 14, 2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search-bar\",\n            placeholder: \"Enter something here...\" //On change event, call setquery pass in event target\n            ,\n            onChange: e => setQuery(e.target.value),\n            value: query,\n            onKeyPress: search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"devbox2\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Enter a major city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location\",\n              children: [weather.name, \", \", weather.sys.state]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: dateBuilder(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp\",\n              children: [Math.round(weather.main.temp), \"\\xB0F\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather\",\n              children: weather.weather[0].main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"GVng0aXCH4yLtaeOWbs04pRRVUQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/trollhero/MEGAsync/Lambda/react-wx-vercel/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","e","target","value","name","sys","state","Date","Math","round"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nconst api = {\n    key: \"dc6ff6a86398fe175602b6f3e0ff0091\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n    //Declare and init state to empty str, empty obj\n    const [query, setQuery] = useState(\"\");\n    const [weather, setWeather] = useState({});\n\n    //Define the search function, takes event object\n    const search = (evt) => {\n        //If enter key is pressed\n        if (evt.key === \"Enter\") {\n            //Call the api, pass in query state\n            fetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`)\n            //fetch(`${api.base}weather?q=${query}&appid=${api.key}`)\n                //Then get the json promise\n                .then(res => res.json())\n                //Then set weather and query state\n                .then(result => {\n                    setWeather(result);\n                    //Reset to empty string upon completion to choose new target location\n                    setQuery(\"\");\n                    console.log(result);\n                });\n        }\n    }\n\n\n    //Datebuilder function\n    const dateBuilder = (d) => {\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\",\n            \"September\", \"October\", \"November\", \"December\"];\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n        let day = days[d.getDay()];\n        let date = d.getDate();\n        let month = months[d.getMonth()];\n        let year = d.getFullYear();\n\n        return `${day} ${date} ${month} ${year}`\n    }\n\n\n    return (\n        <div className={\n            //If no search, call class app\n            (typeof weather.main != \"undefined\")\n                //If temp highe than 85\n                ? ((weather.main.temp > 85)\n                //Call class warm\n                ? \"App warm\":\n                // Else, call app\n                    \"App\") :\n                \"App\"}>\n            <div className=\"App\">\n                <main>\n                    <div className= \"devbox\">\n                        <p>React Weather App</p>\n                        <p>openweater.org</p>\n                        <p>tombielawski.com</p>\n                        <div>October 14, 2021</div>\n                    </div>\n\n                    <div className = \"search-box\">\n                        <input\n                            type = \"text\"\n                            className= \"search-bar\"\n                            placeholder=\"Enter something here...\"\n                            //On change event, call setquery pass in event target\n                            onChange={e => setQuery(e.target.value)}\n                            value={query}\n                            onKeyPress={search}\n                        />\n                        <div className= \"devbox2\"><p>Enter a major city</p></div>\n                    </div>\n                    {/**/}\n                    {(typeof weather.main != \"undefined\") ? (\n                        <div>\n                            <div className=\"location-box\">\n                                <div className=\"location\">{weather.name}, {weather.sys.state}</div>\n                                <div className=\"date\">{dateBuilder(new Date())}</div>\n                            </div>\n                            <div className=\"weather-box\">\n                                <div className=\"temp\">\n                                    {Math.round(weather.main.temp)}°F\n                                </div>\n                                {/*make adjustment for us cities and states*/}\n                                <div className=\"weather\">{weather.weather[0].main}</div>\n                            </div>\n                        </div>\n                    ) : ('')}\n                </main>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}